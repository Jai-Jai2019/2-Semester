import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class JavaCalculator extends JFrame {

    //Line 1
    private JButton butt7, butt8, butt9, buttPlus, buttMax, buttMean;
    //Line 2
    private JButton butt4, butt5, butt6, buttMinus, buttMin, buttMode;
    //Line 3
    
    //Line 4
    
    //Line 5
    
    //Line 6
    
    private JButton Equal;
    private JButton Add;
    private JButton Subtract;
    private JButton Multiply;
    private JButton Divide;
    private JButton Solve;
    private JButton Clear;
    private double TEMP;
    private double SolveTEMP;
    private JTextField jtfResult;

    Boolean addBool = false;
    Boolean subBool = false;
    Boolean divBool = false;
    Boolean mulBool = false;

    String display = "";

    public JavaCalculator() {

        JPanel p = new JPanel();
        p.setLayout(new GridLayout(4, 3));
        
        //Line 1
        p.add(butt7 = new JButton("7"));
        p.add(butt8 = new JButton("8"));
        p.add(butt9 = new JButton("9"));
        p.add(buttPlus = new JButton("+"));
        p.add(buttMax = new JButton("ᴍᴀx"));
        p.add(buttMean = new JButton("ᴍᴇᴀɴ"));
        
        //Line 2
        p.add(butt7 = new JButton("4"));
        p.add(butt8 = new JButton("5"));
        p.add(butt9 = new JButton("6"));
        p.add(buttMinus = new JButton("-"));
        p.add(buttMin= new JButton("ᴍɪɴ"));
        p.add(buttMode = new JButton("ᴍᴏᴅᴇ"));
        
        //Line 3
        p.add(butt1 = new JButton("1"));
        p.add(butt2 = new JButton("2"));
        p.add(butt3 = new JButton("3"));
        p.buttMultiply = new JButton("*");
        p.add(butt17 = new JButton("9"));
        p.add(butt18 = new JButton("9"));
        
        //Line 4
        p.add(butt19 = new JButton("C"));
        p.add(Clear20 = new JButton("0"));
        p.add(butt21 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        
        //Line 5
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        
        //Line 6
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        p.add(butt3 = new JButton("9"));
        
        

        JPanel p2 = new JPanel();
        p2.setLayout(new FlowLayout());
        p2.add(jtfResult = new JTextField(20));
        jtfResult.setHorizontalAlignment(JTextField.RIGHT);
        jtfResult.setEditable(false);

        JPanel p3 = new JPanel();
        p3.setLayout(new GridLayout(5, 1));
        p3.add(Add = new JButton("+"));
        p3.add(Subtract = new JButton("-"));
        p3.add(Multiply = new JButton("*"));
        p3.add(Divide = new JButton("/"));
        p3.add(Solve = new JButton("="));

        JPanel p4 = new JPanel();
        p4.setLayout(new GridLayout());
        p4.add(p2, BorderLayout.NORTH);
        p4.add(p, BorderLayout.SOUTH);
        p4.add(p3, BorderLayout.EAST);

        add(p);

        butt1.addActionListener(new ListenToOne());
        butt2.addActionListener(new ListenToTwo());
        butt3.addActionListener(new ListenToThree());
        butt4.addActionListener(new ListenToFour());
        butt5.addActionListener(new ListenToFive());
        butt6.addActionListener(new ListenToSix());
        butt7.addActionListener(new ListenToSeven());
        butt8.addActionListener(new ListenToEight());
        butt9.addActionListener(new ListenToNine());
        butt0.addActionListener(new ListenToZero());

        Add.addActionListener(new ListenToAdd());
        Subtract.addActionListener(new ListenToSubtract());
        Multiply.addActionListener(new ListenToMultiply());
        Divide.addActionListener(new ListenToDivide());
        Solve.addActionListener(new ListenToSolve());
        Clear.addActionListener(new ListenToClear());
    } //JavaCaluclator()

    class ListenToClear implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            //display = jtfResult.getText();
            jtfResult.setText("");
            addBool = false;
            subBool = false;
            mulBool = false;
            divBool = false;

            TEMP = 0;
            SolveTEMP = 0;
        }
    }

    class ListenToOne implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "1");
        }
    }

    class ListenToTwo implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "2");
        }
    }

    class ListenToThree implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "3");
        }
    }

    class ListenToFour implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "4");
        }
    }

    class ListenToFive implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "5");
        }
    }

    class ListenToSix implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "6");
        }
    }

    class ListenToSeven implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "7");
        }
    }

    class ListenToEight implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "8");
        }
    }

    class ListenToNine implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "9");
        }
    }

    class ListenToZero implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            display = jtfResult.getText();
            jtfResult.setText(display + "0");
        }
    }

    class ListenToAdd implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            TEMP = Double.parseDouble(jtfResult.getText());
            jtfResult.setText("");
            addBool = true;
        }
    }

    class ListenToSubtract implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            TEMP = Double.parseDouble(jtfResult.getText());
            jtfResult.setText("");
            subBool = true;
        }
    }

    class ListenToMultiply implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            TEMP = Double.parseDouble(jtfResult.getText());
            jtfResult.setText("");
            mulBool = true;
        }
    }

    class ListenToDivide implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            TEMP = Double.parseDouble(jtfResult.getText());
            jtfResult.setText("");
            divBool = true;
        }
    }

    class ListenToSolve implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            SolveTEMP = Double.parseDouble(jtfResult.getText());
            if (addBool == true)
                SolveTEMP = SolveTEMP + TEMP;
            else if ( subBool == true)
                SolveTEMP = SolveTEMP - TEMP;
            else if ( mulBool == true)
                SolveTEMP = SolveTEMP * TEMP;
            else if ( divBool == true)
                            SolveTEMP = SolveTEMP / TEMP;
            jtfResult.setText(  Double.toString(SolveTEMP));

            addBool = false;
            subBool = false;
            mulBool = false;
            divBool = false;
        }
    }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        JavaCalculator calc = new JavaCalculator();
        calc.pack();
        calc.setLocationRelativeTo(null);
                calc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        calc.setVisible(true);
    }

} //JavaCalculator

https://stackoverflow.com/questions/4298716/simple-gui-java-calculator/4298803
