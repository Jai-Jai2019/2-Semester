  import java.util.Scanner;
  
    public class Main {
    static Scanner sc = new Scanner(System.in);

        public static void main(String arg[]) {
            
        System.out.println("Record Address Calculation\n");
        int a, alpha, fnum;
        int record[];
            System.out.print("How many Fields: ");
        
        fnum = sc.nextInt();
        int esize[] = new int[fnum];
        int esizetype[] = new int[fnum];
        for (int count = 0; count < fnum; count++) {
            System.out.print("1. Char \t 2. Int\n3. Float\t 4. Double\nWhat field will be in #" + (count +1) + " :");
  
        int ftype = sc.nextInt();
            esizetype[count] = ftype;
            
            switch (ftype) {
            case 1:
    
            esize[count] = 1;
            break;
            case 2:
        
            esize[count] = 2;
            break;
            case 3:
        
            esize[count] = 4;
            break;
            case 4:
            
            esize[count] = 8;
            break;
            default:
            System.out.println("Try again");
            count--;
                }
            }

        System.out.print("\nEnter the desired dimesion: ");
        a = sc.nextInt();

        record = new int[a];
        
        for (int count = 0; count < a; count++) {
            System.out.print("Enter the number " + (count + 1) + " dimension size: ");
            record[count] = sc.nextInt();
        }

        System.out.print("\nThe Given record is: A");
        
        for (int i = 0; i < record.length; i++) {
        System.out.print("[" + record[i] + "]");
        }
        System.out.println("\n");

        System.out.print("Enter Alpha Value to be used in the Address Calculation: ");
        alpha = sc.nextInt();
        System.out.println("Enter address to find");
        
        int recordToFind[] = new int[a];

        for (int i = 0; i < a; i++) {
            System.out.print("Enter A");
        for (int j = 0; j <= i; j++) {
            if (j < i) {
            System.out.print("[" + recordToFind[j] + "]");
        }     
        else {
        System.out.print("[?]: ");
            }
        }
        recordToFind[i] = sc.nextInt();
        }
  
        System.out.print("\nThe Address to find is: A");
        for (
            int i = 0; i < recordToFind.length; i++) {
            System.out.print("[" + recordToFind[i] + "]");
        }
        System.out.println("\n");

        long summation = 0;
            for (int i = 0; i < recordToFind.length; i++) {
                int product = recordToFind[i];
                    for (int j = (i + 1); j < record.length; j++) {
                    product = product * record[j];
                }
            summation = summation + product;
        }

        long sizetotal = 0;
            for (int count = 0; count < esize.length; count++) {
                sizetotal += esize[count];
        }
        long amma = alpha + (summation * sizetotal);
  
        System.out.println("What will you search?");
        for (int count = 0; count < esize.length; count++) {
            switch (esizetype[count]) {
                
                case 1:
                System.out.println((count + 1) + ". char[" + esize[count] + "]");
                break;
                
                case 2:
                System.out.println((count + 1) + ". int");
                break;
                
                case 3:
                System.out.println((count + 1) + ". float");
                break;
                
                case 4:
                System.out.println((count + 1) + ". double");
                break;
                default:
            }
        }
        int extra = sc.nextInt();
            for (int count = 1; count < extra; count++) {
                amma = amma + esize[(count - 1)];
        }
        System.out.println("The address calculation solution is: " + amma);
        System.out.println("The total element: " + getTotalNumberOfElement(record));
    }
    static int getTotalNumberOfElement(int[] arr) {
        int sum = 1;
            for (int c = 0; c < arr.length; c++) {
                sum = sum * arr[c];
            }
        return sum;
    }
}
